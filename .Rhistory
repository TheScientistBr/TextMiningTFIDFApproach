source('D:/Data Science/tools/iClassFile.R')
setwd("D:/Data Science/r/TextMining")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass(1)
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2")
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/plotClass.R')
source('D:/Data Science/r/aTribunaDev/plotClass.R')
source('D:/Data Science/r/aTribunaDev/plotClass.R')
plotClass("at2",compare = "index/004062006at2.txt.idx")
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
iClassFile("index/004062006at2.txt.idx",wplot = TRUE)
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
iClassFile("index/004062006at2.txt.idx",wplot = TRUE)
iClassFile("index/004062006at2.txt.idx",wplot = TRUE)
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
iClassFile("index/004062006at2.txt.idx",wplot = TRUE)
iCLassFileAll(1,maxFiles = 10)
showResults(1)
showResults(1,print = TRUE)
source('D:/Data Science/r/aTribunaDev/iClassFile.R')
setwd("D:/Data Science/r")
x <- 3
if(x > 3) {
y <- 10
} else {
y <- 0
}
print(x,y)
print(c(x,y))
y <- if(x > 3) {
10
} else {
0
}
x <- 2
y <- if(x > 3) {
10
} else {
0
}
y
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x <- 5
y <- if(x > 3) {
10
} else {
2
}
x <- 2
y <- if(x > 3) {
10
} else {
0
}
if( x> 3)
y <- 4
if( x < 3)
y <- 4
source('~/.active-rstudio-document')
x <- c("a", "b", "c", "d")
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for(letter in x) {
print(letter)
}
x <- matrix(1:6, 2, 3)
x
nrow(x)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i, j])
}
}
for(i in seq_len(ncow(x))) {
for(j in seq_len(nrol(x))) {
print(x[i, j])
}
}
for(i in seq_len(ncol(x))) {
for(j in seq_len(nrol(x))) {
print(x[i, j])
}
}
for(j in seq_len(nrow(x))) {
print(x[i, j])
}
for(j in seq_len(ncol(x))) {
for(i in seq_len(nrow(x))) {
print(x[i, j])
}
}
print(x[j, i])
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
count <- 1
while(count <= 10) {
print(count)
count <- count + 1
}
count <- 1
ct <- 5
while(count <= 10, ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct = 9
}
while(count <= 10, ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct <- 9
}
while(count <= 10 && ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct <- 9
}
while(count <= 10 , ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct <- 9
}
while(count <= 10 && ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct <- 9
}
while(count <= 10 && ct == 5) {
print(count)
count <- count + 1
if(count == 5)
ct <- 9
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
setwd("D:/Data Science/r/TextMiningTFIDFApproach")
book_words <- read.table(file = "data/aTribunaBook_Words.csv",nrows = 100)
book_words <- read.table(file = "data/aTribunaBook_Words.csv")
classe <- "at2"
subClass <- subset(book_words, class == classe)
dim(subClass)
dim(subClass)[1]
dim(subClass)[1]*.7
files <- uniq(sort(subClass$file))
files <- unique(sort(subClass$file))
subClass <- subset(book_words, file %in% files)
length(files)
length(files)*.7
integer(length(files)*.7)
as.integer(length(files)*.7)
subClass <- subset(book_words, class == classe)
files <- as.integer(length(files)*.kfold)
subClass <- subset(book_words, file %in% files)
subClass <- subset(book_words, class == classe)
files <- as.integer(length(files)*.kfold)
kfold = .7
files <- as.integer(length(files)*.kfold)
files <- as.integer(length(files)*kfold)
files <- unique(sort(subClass$file))
nfiles <- as.integer(length(files)*kfold)
length(files)
files <- unique(sort(subClass$file))[1:nfiles]
subClass <- subset(book_words, class == classe)
nfiles <- as.integer(length(files)*kfold)
files <- unique(sort(subClass$file))[1:nfiles]
files <- files[1:files,]
files <- files[1:files]
files <- head(files,files)
files
files[1:3]
subClass <- subset(book_words, class == classe)
nfiles <- as.integer(length(files)*kfold)
files <- unique(sort(subClass$file))
nfiles <- as.integer(length(files)*kfold)
files[1:nfiles]
files <- files[1:5]
subClass <- subset(book_words, file %in% files)
files[1:5]
files <- files[1:nfiles]
files <- unique(sort(subClass$file))
files <- as.character(unique(sort(subClass$file)))
as.integer(length(files)
)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)
)
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
centroid <- data.frame(tapply(subClass$tf_idf,subClass$word,mean))
colnames(centroid) <- c("tf_idf")
source('D:/Data Science/r/TextMiningTFIDFApproach/createClassCentroid.R')
createClassCentroid()
classes <- read.csv(myClass,stringsAsFactors = FALSE, header = TRUE)[1]
classes <- read.csv(myClass,stringsAsFactors = FALSE, header = TRUE)
sapply(classes, function(classe) {
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
centroid <- data.frame(tapply(subClass$tf_idf,subClass$word,mean))
colnames(centroid) <- c("tf_idf")
centroids <- list(class = classe, centroid = centroid)
write.csv(centroids,"data/centroid.txt",append = TRUE)
})
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
centroid <- data.frame(tapply(subClass$tf_idf,subClass$word,mean))
colnames(centroid) <- c("tf_idf")
centroids <- list(class = classe, centroid = centroid)
write.csv(centroids,"data/centroid.txt",append = TRUE)
clsasse <- "bro"
classe <- "bro"
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
centroid <- data.frame(tapply(subClass$tf_idf,subClass$word,mean))
colnames(centroid) <- c("tf_idf")
centroids <- list(class = classe, centroid = centroid)
write.csv(centroids,"data/centroid.txt",append = TRUE)
centroids <- as.data.frame(class = classe, centroid = centroid)
l <- 0
centroids <- list()
l <- l +1
centroids[[l]] <- list(class = classe, centroid = centroid)
l <- l +1
centroids[[l]] <- list(class = classe, centroid = centroid)
source('D:/Data Science/r/TextMiningTFIDFApproach/createClassCentroid.R')
createClassCentroid()
centroids[[1]]
centroids[[1,]]
centroids[1]
centroids[1,]
centroids[[1]][1]
centroids[[1]][2]
centroids[[2]][1]
centroids[[1]][1]
centroids[[100]][1]
centroids[[10]][1]
createClassCentroid()
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
centroid <- data.frame(tapply(subClass$tf_idf,subClass$word,mean))
head(centroid)
colnames(centroid) <- c("tf_idf")
head(centroid)
tapply(subClass$tf_idf,subClass$word,mean
tapply(subClass$tf_idf,subClass$word,mean)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:nfiles]
subClass <- subset(book_words, file %in% files)
mean <- tapply(subClass$tf_idf,subClass$word,mean)
dim(subClass)
dim(tapply(subClass$tf_idf,subClass$word,mean))
length(tapply(subClass$tf_idf,subClass$word,mean))
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:2]
subClass <- subset(book_words, file %in% files)
head(subClass$file)
factor(subClass$file)
subClass <- data.frame(subClass,stringsAsFactors = FALSE)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
library(dplyr)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
subClass <- as.data.table(subClass,stringsAsFactors = FALSE)
library(dtplyr)
library("dtplyr")
library("dt")
library("DT")
subClass <- data.table(subClass,stringsAsFactors = FALSE)
library(".data.table")
library("data.table")
library("dtplyr")
install.packages("dtplyr")
library("dtplyr")
subClass <- data.table(subClass,stringsAsFactors = FALSE)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:2]
subClass <- subset(book_words, file %in% files)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass$tf_id
subClass$word
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(subClass, mean != NA)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:2]
subClass <- subset(book_words, file %in% files)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(subClass, subCalss$mean != NA)
subClass <- subset(subClass, subClass$mean != NA)
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:2]
subClass <- subset(book_words, file %in% files)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(subClass, is.na(subClass$mean))
subClass <- subset(book_words, class == classe)
files <- as.character(unique(sort(subClass$file)))
nfiles <- as.integer(length(files)*kfold)
files <- files[1:2]
subClass <- subset(book_words, file %in% files)
subClass <- data.table(subClass,stringsAsFactors = FALSE)
subClass$mean <- tapply(subClass$tf_idf,subClass$word,mean)
subClass <- subset(subClass, !is.na(subClass$mean))
head(subClass)
